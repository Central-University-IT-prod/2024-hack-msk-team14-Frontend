stages:
  - build
  - deploy
build:
  image: docker:27
  stage: deploy
  services:
    - docker:27-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_HOST: "tcp://docker:2376"
    DOCKER_CERT_PATH: "/certs/client"
    DOCKER_TLS_VERIFY: "1"
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
deploy:
  stage: deploy
  needs:
    - build
  before_script:
    - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )
    - apt-get install gettext rsync -y
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - envsubst < .env-template > .env
  script:
    - rsync -avzhe "ssh -o StrictHostKeyChecking=no -p $SSH_PORT" --progress .env docker-compose.yaml $SSH_USER@$SSH_HOST:$HOST_DIR
    - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "cd $HOST_DIR && echo '$CI_REGISTRY_PASSWORD' | docker login -u '$CI_REGISTRY_USER' --password-stdin $CI_REGISTRY && docker compose pull && docker compose down && docker compose up -d"
  after_script:
    - ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "docker system prune -af"